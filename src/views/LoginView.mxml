<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark">
	
	<fx:Script>
		<![CDATA[
			import componentes.graficos.PopupMensaje;
			
			import controlador.Controlador;
			
			import eventos.SesionEvent;
			
			import modelo.Modelo;
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			[Bindable]private var modelApp:Modelo = Modelo.getInstance();
			[Bindable]private var img:String = 'assets/portada.jpg';
			
			
			private var controlador:Controlador = Controlador.getInstance();
			
			protected function btnEntrar_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var evento:SesionEvent = new SesionEvent(SesionEvent.INICIA_SESION, txtUser.text, txtPass.text);
				//evento.callback = evaluaSesion;
				Controlador.getInstance().dispatchEvent(evento);
				//modelApp.conexion.envia('LR|' + txtUser.text + '|' + txtPass.text + '|', null);
			}
			
			private function set evaluaSesion(val:*):void{
				if(!isNaN(modelApp.sesion.id)){
					if(modelApp.sesion.id != 0){
						modelApp.cntlVista = 1;
					} else {
						var pop:PopupMensaje = new PopupMensaje();
						pop.msg = 'Error en usuario o Password';
						pop.width = this.width;
						pop.height = this.height;
						PopUpManager.addPopUp(pop, this);
						PopUpManager.centerPopUp(pop);
					}	
				}
				
			}
			
			protected function bordercontainer1_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				txtPass.width = contenedor.width - 40;
				txtUser.width = contenedor.width - 40;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Binding source="modelApp.sesion.id" destination="evaluaSesion"/>
	<s:Image horizontalCenter="0" top="0" width="100%" source="{img}" height="100%" scaleMode="zoom"/>
	<s:BorderContainer id="contenedor" horizontalCenter="0" verticalCenter="0" width="300" height="200" 
					   cornerRadius="5" borderColor="#ffffff" backgroundAlpha=".9" backgroundColor="#000000"
					   creationComplete="bordercontainer1_creationCompleteHandler(event)">
		<s:layout>
			<s:VerticalLayout paddingBottom="20" paddingTop="10"/>
		</s:layout>
		<s:HGroup width="100%" verticalAlign="middle" gap="5" paddingLeft="20" paddingRight="20">
			<s:Label text="Login" fontWeight="bold" color="#ffffff" width="25%" fontSize="18"/>
			<s:Label width="45%" color="#eeeeee" fontSize="10" text="Â¿No tiene cuenta?"
					 textAlign="right"/>
			<s:Button width="30%" height="32" label="Reg" fontSize="10" skinClass="skinPropios.BotonTransparente" color="0xffffff"/>
		</s:HGroup>
		<s:Line xFrom="0" xTo="{contenedor.width - 2}">
			<s:stroke>
				<s:SolidColorStroke color="0xffffff" weight="1" caps="square"/>
			</s:stroke>
		</s:Line>
		<s:VGroup paddingLeft="20" paddingRight="20" width="100%">
			<s:TextInput id="txtUser" left="20" width="100%" prompt="Usuario"
						  text="p1"/>
			<s:TextInput id="txtPass" prompt="Password" displayAsPassword="true" text="2" width="100%" left="20"/>
			<s:HGroup width="100%">
				<s:CheckBox width="100%" label="Guardar Password" color="0xffffff" fontSize="10"/>
				<s:Button id="btnEntrar" color="0xffffff" height="40" label="Ingresar" click="btnEntrar_clickHandler(event)" skinClass="skinPropios.BotonTransparente"/>
				
			</s:HGroup>
			
		</s:VGroup>
		
		<!--<s:Image source="{img}"/>-->	
	</s:BorderContainer>
	
</s:Group>
